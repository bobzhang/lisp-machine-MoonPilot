package "bobzhang/sexp"

// Values
fn create_standard_env() -> Environment

fn evaluate(Sexp) -> Sexp raise

fn parse_sexp(String) -> Sexp raise ParseError

fn tokenize(@moonbitlang/core/string.StringView) -> Array[@moonbitlang/core/string.StringView]

// Types and methods
pub struct Environment {
  bindings : Map[String, Value]
}

type ParseError
impl Show for ParseError
impl ToJson for ParseError

pub(all) enum Sexp {
  Atom(String)
  List(Array[Sexp])
}
impl Eq for Sexp
impl Show for Sexp
impl ToJson for Sexp

pub(all) enum Value {
  Number(Int)
  Boolean(Bool)
  Symbol(String)
  Function(Array[String], Sexp, Environment)
  BuiltinFunction(String)
}

// Type aliases

// Traits

